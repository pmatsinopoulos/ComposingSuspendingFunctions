/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.panosmatsinopoulos.composingsuspendingfunctions

import kotlinx.coroutines.CoroutineStart
import kotlinx.coroutines.async
import kotlinx.coroutines.delay
import kotlinx.coroutines.runBlocking
import kotlin.system.measureTimeMillis

suspend fun doSomethingUsefulOne(): Int {
    delay(1_000L)
    return 13
}

suspend fun doSomethingUsefulTwo(): Int {
    delay(1_000L)
    return 29
}

fun main() {
    println("Main starting...")
    var time = 0L
    runBlocking {
        time = measureTimeMillis {
            val one = async(start = CoroutineStart.LAZY) { doSomethingUsefulOne() }
            val two = async(start = CoroutineStart.LAZY) { doSomethingUsefulTwo() }
            one.start()
            two.start()
            println(one.await() + two.await())
        }
    }

    println("Took $time ms")
    println("Main ending!")
}
